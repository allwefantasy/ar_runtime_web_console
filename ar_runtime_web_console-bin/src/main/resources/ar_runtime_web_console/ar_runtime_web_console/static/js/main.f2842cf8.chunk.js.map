{"version":3,"sources":["service/backend/RestConst.js","service/backend/Backend.js","service/RemoteAction.js","service/ActionProxy.js","components/api_form/Warning.js","components/api_form/autogens/AutoGenForm.js","components/BaseReactComp/BaseComp.js","utils/Utils.js","components/api_form/autogens/AutoGenBaseComp.js","components/api_form/autogens/AutoGenInput.js","components/api_form/autogens/AutoGenSelect.js","components/api_form/autogens/AutoGenCheckBox.js","components/api_form/autogens/AutoGenTreeView2.js","components/api_form/autogens/AutoGenDynamic.js","components/api_form/autogens/AutoGenEditor.js","components/api_form/FormElementMapping.js","components/api_form/Form.js","components/api_form/TableView.js","components/APIView.js","components/APIMain.js","components/APINav.js","router/BaseRouter.js","router/APINavSwitcher.js","router/APIViewSwitcher.js","App.js","serviceWorker.js","index.js"],"names":["Method","GET","POST","PUT","DELETE","AccessToken","name","RestResponse","status","content","this","Backend","url","fetch_config","action","params","property","method","toUpperCase","formBody","encodedKey","encodeURIComponent","encodedValue","push","newurl","join","undefined","basic_config","timeout","headers","sessionStorage","getItem","body","final_config","fetch","response","ok","text","error","json","RemoteAction","HELLO","LIST_SCRIPT_FILE","CREATE_SCRIPT_FILE","LIST_ACTIONS","LIST_APINavItems","LIST_APINav","ChooseAPINav","ActionProxy","backend","request","res","Warning","props","warn","title","setState","open","handleClose","state","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","React","Component","AutoGenForm","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","back","evt","preventDefault","router","popPage","forms","elements","instances","item","classes","Container","component","maxWidth","ref","containerRef","CssBaseline","warningRef","className","Avatar","Typography","variant","noValidate","ButtonGroup","aria-label","type","BaseComp","Promise","resolve","Utils","list","n","length","stepSize","Math","floor","groups","groupNum","range","i","min","setEqual","a","b","temp1","temp2","forEach","indexOf","buildTree","node","tempMap","roots","childNodes","parentId","e","console","log","throttle","fn","wait","timer","setTimeout","args","apply","debounce","delay","clearTimeout","AutoGenBaseComp","addMonitor","monitor","monitors","values","dependencies","collect_dependencies","reload","bind","input","Set","Array","from","map","proxy","resp","AutoGenInput","handleChange","event","target","value","TextField","fullWidth","autoFocus","onChange","label","AutoGenSelect","select","option","MenuItem","key","AutoGenCheckBox","checked","GreenCheckbox","withStyles","root","green","Checkbox","items","statue","FormControlLabel","control","AutoGenTreeView2","toggleIsExpanded","isExpanded","isRootNode","nodeId","nodes","handleNodeClick","handNodeDoubleClick","handleNodeCollapse","handleNodeExpand","onNodeContextMenu","add","JSON","parse","nodeData","_nodePath","originallySelected","isSelected","shiftKey","forEachNode","callback","contents","onNodeClick","onNodeCollapse","onNodeExpand","onNodeDoubleClick","TreeNodeEnum","DIR","FILE","AutoGenDynamic","subTpe","row","meta","stringify","FormElementMapping","mapping","AutoGenEditor","editorRef","editor","getValue","language","defaultSize","height","onResize","resize","mode","fontSize","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","pushInstance","valueProviderName","depends","build","FormBuilder","post","autogen","tpe","TableView","load","data","maxSize","maxSizeItem","wow","Object","keys","columns","rows","table","minWidth","tableHeaders","TableCell","tableRows","tableRow","col","scope","TableRow","TableContainer","Paper","Table","TableHead","TableBody","APIView","v","errorView","view","ex","builder","setStateSync","inputWithDepends","filter","inputAlonesMap","dep","style","background","handleListItemClick","toPage2","toNav","get","children","index","ListItem","button","ListItemIcon","ListItemText","primary","List","goToNav","Step","Steps","APINav","openNotificationWithIcon","message","description","notification","current","steps","apiNavId","bordered","marginBottom","next","success","marginLeft","prev","BaseRouter","app","pages","func","toPage1","pop","page","APINavSwitcher","page1","page2","apiView","APIViewSwitcher","nav","current_action","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2842cf8.chunk.js","sourcesContent":["export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER + \"/run\";\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n","import {BACKEND_URL,AccessToken} from './RestConst'\n\nexport class RestResponse {\n    constructor(status,content){\n        this.status = status\n        this.content = content\n    }\n }\n\nexport  class Backend {\n    \n    constructor(url,fetch_config={}){\n        this.url = url      \n        if(!this.url){\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n      }\n\n    async request(action, params,method=\"GET\") {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }        \n        let newurl = this.url + \"?\" + \"action=\" + action\n\n        if (method === \"GET\") {\n            newurl = newurl + \"&\" + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = {...basic_config,...this.fetch_config}\n        \n        try{\n            const response = await fetch(newurl,final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status,error);\n              }\n            const json = await response.json();\n            return new RestResponse(200,json);\n        }catch(err){\n            return new RestResponse(500,err);\n        }\n    }\n}\n","export default class RemoteAction{\n    static HELLO = \"hello_world\" \n    static LIST_SCRIPT_FILE= \"listScriptFile\"\n    static CREATE_SCRIPT_FILE= \"createScriptFile\" \n    static LIST_ACTIONS =\"listActions\"\n    static LIST_APINavItems = \"listAPINavItems\"\n    static LIST_APINav = \"listAPINav\"\n    static ChooseAPINav = \"chooseAPINav\"\n\n}","import {RestResponse,Backend} from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport {Method,Status} from './backend/RestConst'\n\nexport class UserActionParams {\n  static USERE_NAME = \"userName\"   \n  \n}\nexport class ResponseKey {\n   static SIGH_IN_MAIN_PAGE = \"sighInMainPage\"\n}\n\n\nexport class ActionProxy {\n    constructor(){\n        this.backend = new Backend()        \n    }    \n    async hello(){        \n      const res = await this.backend.request(RemoteAction.HELLO,{},Method.GET)\n      return res\n    }\n\n    /**\n     * \n     * @param {string} action \n     * @param {{}} params \n     * @return {RestResponse}\n     */\n    async get(action,params){\n      const res = await this.backend.request(action,params,Method.GET)\n      return res\n    }\n\n    /**\n     * \n     * @param {string} action \n     * @param {{}} params \n     * @returns {RestResponse}\n     */\n    async post(action,params){        \n        const res = await this.backend.request(action,params,Method.POST)\n        return res\n      }\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class Warning extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {open:false}\n  }\n  warn = (title,content) => {\n    this.setState({open:true,title:title,content:content})\n    \n  }\n  handleClose = () => {\n    this.setState({open:false})\n  };\n  render(){\n  \n  return (\n    <div>      \n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {this.state.content}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            Close\n          </Button>          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n  }\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Warning from '../Warning'\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nexport class AutoGenForm {\n\n  constructor(props) {\n    this.action = props.action\n    this.forms = []\n    this.elements = []\n    this.instances = []\n    this.submit = props.submit\n    this.router = props.router\n  }\n\n  useStyles = () => makeStyles(theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 3, 2),\n    },\n  }));\n\n  push(item) {\n    this.elements.push(item)\n  }\n\n  pushInstance(item) {\n    this.instances.push(item)\n  }\n  back = (evt) => {\n    evt.preventDefault()\n    this.router.popPage()\n  }\n  build() {\n    const classes = this.useStyles();\n\n    return (\n\n      <Container component=\"main\" maxWidth=\"xs\" ref={(item) => this.containerRef = item}>\n        <CssBaseline />\n        <div>\n          <Warning ref={(item) => { this.warningRef = item }}></Warning>\n        </div>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {this.action}\n          </Typography>\n          <form className={classes.form} noValidate>\n            {this.elements}\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n              <Button\n                type=\"submit\"                \n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={this.submit}\n              >\n                Commit\n            </Button>\n              <Button\n                type=\"submit\"                \n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={this.back}\n              >\n                Back\n            </Button>\n            </ButtonGroup>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}","\nimport React from 'react'\n\nexport class BaseComp extends React.Component {\n    setStateSync(state) {\n        return new Promise((resolve) => {\n            this.setState(state, resolve)\n        });\n    }\n}","export class Utils {\n    \n    \n    static setEqual=(a,b)=>{\n        const temp1 = [...a]\n        const temp2 = [...b]\n        if(temp1.length!==temp2.length) return false\n        let res = true\n        temp1.forEach(item=>{\n             if(temp2.indexOf(item) === -1){\n                 res = false\n             }\n        })\n        return res\n    }\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    static buildTree = (list) => {\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(\"------------\")\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n    /**\n     * example:\n     * \n     * btn.onclick = throttle(function(){\n           console.log(\"button clicked\");\n         }, 500);\n     */\n    static throttle = (fn, wait) => {\n        let timer;\n        return function (...args) {\n            if (!timer) {\n                timer = setTimeout(() => timer = null, wait);\n                return fn.apply(this, args);\n            }\n        }\n    }\n\n    /**\n     * example:\n     * \n     * window.addEventListener(\"scroll\", debounce(function(){\n                console.log(\"scrolled\");\n            }, 500));\n     */\n    static  debounce = (fn, delay)=>{    \n        var timer = null;    \n        return function(...args){\n          clearTimeout(timer);\n          timer = setTimeout(() => fn.apply(this, args), delay);\n        }\n      }\n    /**\n       * \n       * @param {Array} list \n       * @param {Number} n\n       */\n    static splitListToNGroup(list, n) {\n        if (list.length === 0) return [list]\n        if (list.length <= n) return [list]\n\n        let stepSize = Math.floor(list.length / n)\n        if (stepSize < list.length / n) {\n            stepSize = stepSize + 1\n        }\n        const groups = []\n\n        for (var groupNum = 0; groupNum < n; groupNum++) {\n            const range = []\n            for (var i = (groupNum * stepSize); i < Math.min(((groupNum + 1) * stepSize), list.length); i++) {\n                range.push(list[i])\n            }\n            if (range.length > 0) {\n                groups.push(range)\n            }\n\n        }\n        return groups\n    }\n\n    /**\n     * \n     * @param {Array} list \n     * @param {Number} n\n     */\n    static splitListToNGroupByStepSize(list, stepSize) {\n        if (list.length === 0) return [list]\n        if (list.length <= stepSize) return [list]\n\n        let n = Math.floor(list.length / stepSize)\n        if (n < list.length / stepSize) {\n            n = n + 1\n        }\n        const groups = []\n\n        for (var groupNum = 0; groupNum < n; groupNum++) {\n            const range = []\n            for (var i = (groupNum * stepSize); i < Math.min(((groupNum + 1) * stepSize), list.length); i++) {\n                range.push(list[i])\n            }\n            if (range.length > 0) {\n                groups.push(range)\n            }\n\n        }\n        return groups\n    }\n}","import { BaseComp } from \"../../BaseReactComp/BaseComp\";\nimport { ActionProxy } from \"../../../service/ActionProxy\";\nimport { Utils } from \"../../../utils/Utils\";\n\nexport class AutoGenBaseComp extends BaseComp {\n   /**\n     * \n     * @param {form:AutoGenForm,name:string,values:[],dependencies:[],action:string} props\n     */\n    constructor(props){\n        super(props)\n        this.form = props.form\n        this.name = props.name                        \n        this.state = {values:props.values}\n\n        this.forms = this.form.forms                        \n        this.monitors = []\n        this.dependencies = props.dependencies\n        this.collect_dependencies = []\n        this.action = props.action\n\n        this.reload = this.reload.bind(this)\n      }\n\n      async reload (input){\n        this.collect_dependencies.push(input)        \n        const temp1 = new Set(Array.from(this.collect_dependencies).map(item => item.name))\n        const temp2 = new Set(this.dependencies)\n        \n        \n        if(Utils.setEqual(temp1,temp2)){          \n          const proxy = new ActionProxy()\n          const params = {}\n          this.dependencies.forEach(item=>params[item]=this.forms[item])          \n          const resp = await proxy.backend.request(this.action,params)\n          if(resp.status === 200){\n            this.setState({values:resp.content})\n          }          \n        }\n      }\n\n      addMonitor=(monitor)=>{\n        this.monitors.push(monitor)\n      }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenInput extends AutoGenBaseComp{\n    /**\n     * \n     * @param {AutoGenForm} form \n     */\n    constructor(props){\n        super(props)\n      }\n      \n      handleChange = (event)=>{    \n        this.forms[this.name]=event.target.value        \n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){        \n        return (\n            \n            <TextField \n            variant=\"outlined\"\n            margin=\"normal\"            \n            fullWidth                        \n            autoFocus  \n            onChange={this.handleChange}          \n            form={this.form} name={this.name} label={this.name} />\n                      \n        );\n      }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\nexport class AutoGenSelect extends AutoGenBaseComp{\n    /**\n   * \n   * @param {AutoGenForm} form \n   */\n    constructor(props) {\n        super(props)\n    }\n    \n    handleChange = (event)=>{    \n      this.forms[this.name]=event.target.value\n      this.monitors.forEach(monitor=>monitor.reload(this))\n    }\n    \n\n    render() {\n        return (\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoFocus\n                id=\"standard-select-currency\"\n                name={this.name}\n                select\n                label={this.name}\n                onChange={this.handleChange}\n            >\n                {this.state.values.map(option => (\n                    <MenuItem key={option.name} value={option.value}>\n                        {option.name}\n                    </MenuItem>\n                ))}\n            </TextField>\n\n        );\n    }\n}","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenCheckBox extends AutoGenBaseComp{    \n    constructor(props){\n        super(props)        \n      }\n      \n      handleChange = (event)=>{    \n        this.forms[this.name]=event.target.checked\n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){\n        const GreenCheckbox = withStyles({\n            root: {\n              color: green[400],\n              '&$checked': {\n                color: green[600],\n              },\n            },\n            checked: {},\n          })(props => <Checkbox color=\"default\" {...props} />);\n        const items = this.statue.values.map(item=>{\n            return <FormControlLabel\n        control={\n          <GreenCheckbox            \n            onChange={this.handleChange}\n            value={item}\n          />\n        }\n        label={item}\n      />\n        })\n        return <div>{items}</div>\n\n      }\n}","import React from 'react';\nimport {Tree} from \"@blueprintjs/core\";\nimport { Utils } from '../../../utils/Utils';\nimport { ActionProxy } from '../../../service/ActionProxy';\n\n\n\nexport class AutoGenTreeView2 extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.form = props.form\n        this.name = props.name\n        this.forms = this.form.forms\n        this.json = props.json        \n        const nodes = Utils.buildTree(this.json)\n        this.state = { nodes: nodes }\n        this.dependencies = props.dependencies\n        this.action = props.action\n\n\n        this.monitors = []\n        this.dependencies = props.dependencies\n        this.collect_dependencies = new Set()\n\n\n        this.reload = this.reload.bind(this)       \n        this.handleNodeClick = this.handleNodeClick.bind(this)\n        this.handNodeDoubleClick = this.handNodeDoubleClick.bind(this)\n        this.handleNodeCollapse = this.handleNodeCollapse.bind(this)\n        this.handleNodeExpand = this.handleNodeExpand.bind(this)\n        this.onNodeContextMenu = this.onNodeContextMenu.bind(this)\n    }\n\n    async reload(input) {        \n        this.collect_dependencies.add(input)\n        const temp1 = new Set(Array.from(this.collect_dependencies).map(item => item.name))\n        const temp2 = new Set(this.dependencies)\n                \n        if (Utils.setEqual(temp1,temp2)) {            \n            const proxy = new ActionProxy()\n            const params = {}\n            this.dependencies.forEach(item => params[item] = this.forms[item])            \n            const resp = await proxy.backend.request(this.action, params) \n            if(resp.status === 200){\n                const nodes = Utils.buildTree(JSON.parse(resp.content[0].value))\n                this.setState({nodes:nodes})\n            }\n            \n        }\n    }\n\n    async handleNodeClick(nodeData, _nodePath, e){          \n        const originallySelected = nodeData.isSelected;\n        if (!e.shiftKey) {\n            this.forEachNode(this.state.nodes, n => (n.isSelected = false));\n        }\n        nodeData.isSelected = originallySelected == null ? true : !originallySelected;\n        this.setState(this.state);\n        \n        this.forms[this.name]= nodeData.id\n        this.monitors.forEach(monitor=>monitor.reload(this))\n    } \n\n    async handNodeDoubleClick(nodeData, _nodePath, e){        \n        this.forms[this.name]= nodeData.id\n        this.monitors.forEach(monitor=>monitor.reload(this))\n    }\n\n    async handleNodeCollapse(nodeData){        \n        nodeData.isExpanded = false;\n        this.toggleIsExpanded(nodeData.id, false)\n        this.setState(this.state); \n    }\n\n    async handleNodeExpand(nodeData){\n        nodeData.isExpanded = true;\n        this.toggleIsExpanded(nodeData.id, true)\n        this.setState(this.state); \n    }\n\n    async onNodeContextMenu(node, _nodePath, e){\n\n    }\n\n    toggleIsExpanded = (id, isExpanded) => {\n       \n    }\n\n    forEachNode(nodes, callback) {\n        if (nodes == null) {\n            return;\n        }\n\n        for (const node of nodes) {\n            callback(node);\n            this.forEachNode(node.childNodes, callback);\n        }\n    }\n\n    isRootNode = (nodeId) => {\n        return this.state.nodes[0].id === nodeId\n    }\n\n    addMonitor = (monitor) => {\n        this.monitors.push(monitor)\n    }\n\n    render() {\n            \n        return (\n            <div>                \n                <Tree\n                    contents={this.state.nodes}\n                    onNodeClick={this.handleNodeClick}\n                    onNodeCollapse={this.handleNodeCollapse}\n                    onNodeExpand={this.handleNodeExpand}\n                    onNodeContextMenu={this.onNodeContextMenu}\n                    onNodeDoubleClick={this.handNodeDoubleClick}                    \n                />                \n            </div>\n        );\n    }\n}\n\nclass TreeNodeEnum {\n    static DIR = 1\n    static FILE = 2\n}","import React from \"react\"\nimport { AutoGenBaseComp } from \"./AutoGenBaseComp\"\nimport { FormElementMapping } from \"../FormElementMapping\"\n\nexport class AutoGenDynamic extends AutoGenBaseComp{\n    constructor(props){\n        super(props)\n        this.subTpe = props.subTpe \n        this.row = props.row       \n    }\n    build() {     \n        let meta = {name:this.name,values:[]}    \n        if(this.subTpe === \"TreeSelect\"){\n            meta = {name:this.name,json:JSON.stringify([{values:[]}])}    \n        }\n\n        let element = undefined\n        if(this.subTpe===\"Dynamic\"){\n            element = FormElementMapping.mapping[this.subTpe](meta,this.form)\n        }else {            \n            element = FormElementMapping.mapping[this.subTpe](meta,this.form,this.dependencies,this.action)\n        }\n        \n        return element\n    }\n}","import React from 'react'\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport {Resizable} from \"re-resizable\";\nimport { AutoGenBaseComp } from './AutoGenBaseComp';\n\n\nexport class AutoGenEditor extends AutoGenBaseComp{\n    /**\n     * \n     * @param {AutoGenForm} form \n     */\n    constructor(props){\n        super(props)        \n        this.language = (props.values.values[0] && props.values.values[0].name) || \"python\"\n      }\n      \n      handleChange = (event)=>{        \n        this.forms[this.name]= this.editorRef.editor.getValue()\n        this.monitors.forEach(monitor=>monitor.reload(this))\n      }\n\n      render(){        \n        return (\n          <div>\n            <div>{this.name}</div>\n          <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.editorRef.editor.resize();}}>\n          <AceEditor\n          ref={item=>this.editorRef=item}\n          mode={this.language}\n          theme=\"github\"\n          width={\"100%\"}\n          height={\"100%\"}\n          onChange={this.handleChange}\n          name=\"mlsql_editor\"\n          fontSize={16}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          editorProps={{\n              $blockScrolling: Infinity\n          }}\n          setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n              autoScrollEditorIntoView: true\n          }}\n      /></Resizable>\n      </div> \n      \n                      \n        );\n      }\n}","import React from 'react'\nimport {AutoGenInput} from './autogens/AutoGenInput'\nimport {AutoGenSelect} from './autogens/AutoGenSelect'\nimport {AutoGenCheckBox} from './autogens/AutoGenCheckBox'\nimport { AutoGenTreeView2 } from './autogens/AutoGenTreeView2'\nimport { AutoGenDynamic } from './autogens/AutoGenDynamic'\nimport { AutoGenEditor } from './autogens/AutoGenEditor'\n\nexport class FormElementMapping{\n    \n    static mapping = {\n        \"Input\":(row,form,dependencies,action)=>{\n            const input = <AutoGenInput ref={item=>form.pushInstance(item)} form={form} name={row.name} values={[]} dependencies={dependencies} action={action}></AutoGenInput> \n            return input\n        },\n        \"Select\": (row,form,dependencies,action)=>{              \n            const select = <AutoGenSelect ref={item=>form.pushInstance(item)} form={form} name={row.name} values={row.values} dependencies={dependencies} action={action}></AutoGenSelect>\n            return select\n        },\n        \"CheckBox\": (row,form,dependencies,action)=>{  \n            const checkbox = <AutoGenCheckBox ref={item=>form.pushInstance(item)} form={form} name={row.name} values={row.values} dependencies={dependencies} action={action}></AutoGenCheckBox>\n            return checkbox\n        },\n        \"TreeSelect\":(row,form,dependencies,action)=>{            \n            const tree = <AutoGenTreeView2 ref={item=>form.pushInstance(item)} form={form} name={row.name} json={JSON.parse(row.json)[0].values||[]} values={[]} dependencies={dependencies} action={action}></AutoGenTreeView2>    //(form,row.name,JSON.parse(row.json)[0].value)\n            return tree\n        },\n        \"Editor\":(row,form,dependencies,action)=>{            \n            const tree = <AutoGenEditor ref={item=>form.pushInstance(item)} form={form} name={row.name} ref={item=>form.pushInstance(item)} form={form} name={row.name} values={row.values} dependencies={dependencies} action={action}></AutoGenEditor> \n            return tree\n        },\n        \"Dynamic\":(row,form)=>{                      \n            let params = {\n                name:row.name,\n                subTpe:row.subTpe,            \n                form:form,\n                action:row.valueProviderName,\n                dependencies: row.depends,\n                row:row\n            }            \n            const dynamicComp = new AutoGenDynamic(params) \n\n            return dynamicComp.build()\n        }  \n    }\n    \n}\n","import React from 'react'\nimport {ActionProxy, ResponseKey} from '../../service/ActionProxy'\nimport { AutoGenForm } from './autogens/AutoGenForm'\nimport { FormElementMapping } from './FormElementMapping'\n\nexport class FormBuilder {\n\n    /**     \n     * @param {ActionProxy} proxy      \n     */\n    constructor(proxy,router){              \n        this.proxy = proxy  \n        this.router = router                     \n    }\n    /**     \n     * @param {string} action \n     */\n    async build(action,submit,instances){        \n        const res = await this.proxy.post(action,{\"__HELP__\":\"true\"})                \n        /**@type {[]} */\n        const json = res.content\n        \n        const form = new AutoGenForm({action:action,submit:submit,router:this.router})  \n        json.map(item=>{        \n            const autogen = FormElementMapping.mapping[item.tpe](item,form)            \n            form.push(autogen)            \n        })                \n        return form\n    }\n    \n} ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n\nexport default class TableView extends React.Component {\n    \n  constructor(props){ \n      super(props)              \n      this.props = props\n      this.state = {rows:[],columns:[]}\n  }\n\n\n  load = (data)=>{      \n      let maxSize = 0\n      let maxSizeItem = {}      \n      data.forEach(item=>{\n        const wow = Object.keys(item).length\n        if(wow>maxSize){\n            maxSize = wow\n            maxSizeItem = item\n        }\n\n      })\n      const columns = Object.keys(maxSizeItem) || []         \n      this.setState({rows:data,columns:columns})\n  }\n\n  useStyles = ()=>makeStyles({\n    table: {\n      minWidth: 650,      \n    }   \n  });\n  \n  render(){\n    const classes = this.useStyles();\n\n    const tableHeaders = this.state.columns.map(item=>{        \n        return <TableCell>{item}</TableCell>  \n    })\n\n    const tableRows = this.state.rows.map((row)=>{\n       const tableRow = this.state.columns.map(col=>{\n            return <TableCell component=\"th\" scope=\"row\">{row[col]}</TableCell>  \n        })\n       return <TableRow>\n           {tableRow}\n       </TableRow>        \n    })\n\n    return (\n      <TableContainer component={Paper} >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n            {tableHeaders}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableRows}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}","import React from 'react'\nimport { ActionProxy } from '../service/ActionProxy'\nimport { FormBuilder } from './api_form/Form'\nimport { makeStyles } from '@material-ui/core/styles';\nimport RemoteAction from '../service/RemoteAction'\nimport TableView from './api_form/TableView'\nimport { BaseComp } from './BaseReactComp/BaseComp';\nimport Warning from './api_form/Warning';\n\n\nexport default class APIView extends BaseComp {\n    constructor(props) {\n        super(props)\n        this.router = props.router\n        this.action = props.action        \n        if(props.submit){\n            this.submit = props.submit            \n        }else {            \n            this.submit = this.submit.bind(this)                      \n        }\n        \n        this.state = {}\n    }\n\n    useStyles = () => makeStyles(theme => ({\n        v: {\n            marginTop: theme.spacing(1),\n        },\n    }));\n\n    async submit(evt) {\n        evt.preventDefault()\n        const proxy = new ActionProxy()\n        const params = this.form.forms\n        const res = await proxy.backend.request(this.action, params)\n        if(res.status !== 200){        \n            this.errorView.warn(\"Response error\", res.content)\n        }\n        if (res.status ===200 && this.view) {            \n            try {\n                this.view.load(res.content)\n            } catch (ex) {\n                this.errorView.warn(\"Data can not display in table\",res.content)\n            }\n        }\n    }\n    \n    async componentDidMount() {\n        const proxy = new ActionProxy()\n\n        const builder = new FormBuilder(proxy,this.router)\n        this.form = await builder.build(this.action, this.submit)\n\n        await this.setStateSync({ form: this.form.build() })\n\n        //configure dependency of components\n        const inputWithDepends = this.form.instances.filter(item => item.dependencies)\n        const inputAlonesMap = {}\n        this.form.instances.filter(item => !item.dependencies).forEach(item => {\n            inputAlonesMap[item.name] = item\n        })\n        inputWithDepends.forEach(item => {\n            item.dependencies.forEach(dep => {\n                inputAlonesMap[dep].addMonitor(item)\n            })\n        })\n    }\n\n    render() {\n        const classes = this.useStyles()\n        return <div>\n            <div><Warning ref={item => this.errorView = item}></Warning></div>            \n            <div>{this.state.form}</div>\n            <div style={{ marginTop: \"30px\" }}><TableView ref={(item) => this.view = item}></TableView> </div>\n        </div>\n\n    }\n\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport {BaseComp} from '../components/BaseReactComp/BaseComp'\nimport { ActionProxy } from '../service/ActionProxy';\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n  }\n\nexport default class APIView extends BaseComp {\n    constructor(props) {\n        super(props)\n        this.router = props.router\n        this.action = props.action    \n        this.state = {}\n        this.handleListItemClick = this.handleListItemClick.bind(this)\n    }\n\n    useStyles = ()=> makeStyles(theme => ({\n        root: {\n          width: '100%',\n          maxWidth: 360,\n          backgroundColor: theme.palette.background.paper,\n        },\n      }));\n    \n    async handleListItemClick(evt,action){              \n        this.router.toPage2(action)\n    }\n\n    async goToNav(evt){\n       this.router.toNav() \n    }\n\n    async componentDidMount() {        \n        const proxy = new ActionProxy()\n        const resp = await proxy.get(this.action,{})\n        const children = resp.content.map((item,index)=>{\n            const comp = <ListItem key={index} button onClick={event => this.handleListItemClick(event,item.name)}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary={item.name} />\n          </ListItem>\n            return  comp\n        })\n        await this.setStateSync({items:children})\n    }\n    \n\n    render(){      \n        const classes = this.useStyles()\n        return (\n            <div className={classes.root}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListItem button onClick={event => this.goToNav(event)}>\n               <ListItemIcon>\n                  <InboxIcon />\n               </ListItemIcon>\n            <ListItemText primary={\"==> Go to nav page\"} />\n          </ListItem>\n              {this.state.items}                \n              </List>                            \n            </div>\n          );\n    }\n}","import * as React from \"react\";\nimport {Steps, Button, message, List, notification, Card, Col, Row} from 'antd';\nimport { ActionProxy } from \"../service/ActionProxy\";\nimport RemoteAction from \"../service/RemoteAction\"\nimport APIView from '../components/APIView';\n\nconst Step = Steps.Step;\n\nexport default class APINav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.router = props.router\n        this.state = {\n            current: 0,\n            steps:[],\n            apiNavId:props.apiNavId\n        }\n        \n    }\n\n    openNotificationWithIcon = (type, message, description) => {\n        notification[type]({\n            message: message,\n            description: description\n        });\n    };\n\n\n    async componentDidMount() {\n        const proxy = new ActionProxy()        \n        const resp = await proxy.get(RemoteAction.LIST_APINavItems,{apiNavId:this.state.apiNavId})\n        if(resp.status === 200){            \n            const items = resp.content.map((item,index)=>{                               \n                return {\n                    title: item.title,\n                    content: ()=>{\n                    return <Card title={item.title} style={{width:\"600px\"}} bordered={true}>\n                    <APIView router={this.router} key={index}  action={item.action}></APIView>        \n                </Card>}\n                }\n            })            \n            this.setState({steps:items}) \n        }\n        \n    }\n\n    next() {\n        const current = this.state.current + 1;\n        this.setState({current});\n\n\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({current});\n    }\n\n    render() {\n        const {current} = this.state;    \n        if(this.state.steps.length==0){\n            return <div>No Items Available</div>\n        }    \n        return (\n            <div>\n                <div className=\"steps-action\" style={{marginBottom: \"30px\"}}>\n                    {\n                        current < this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => this.next()}>Next Step</Button>\n                    }\n                    {\n                        current === this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>Done</Button>\n                    }\n                    {\n                        current > 0\n                        && (\n                            <Button style={{marginLeft: 8}} onClick={() => this.prev()}>\n                                Previous Step\n                            </Button>\n                        )\n                    }\n                </div>\n                <Steps current={current}>\n                    {this.state.steps.map(item => <Step key={item.title} title={item.title}/>)}\n                </Steps>\n                <div className=\"steps-content\" style={{\"margin-top\": \"30px\"}}>\n                     {this.state.steps[current].content()}\n                </div>\n\n            </div>\n        );\n    }\n\n}","import React from 'react';\n\nexport class BaseRouter extends React.Component{\n    constructor(props){\n        super(props)\n        this.app = props.app\n        this.router = props.router \n        this.pages = [{func:this.toPage1,params:[]}]       \n    }\n    \n    popPage(){\n        this.pages.pop()\n        const page = this.pages.pop()\n        if(page){\n            const {func,params} = page\n            func(...params)\n        }else{\n            if(this.router){\n                this.router.popPage()\n            }else{\n                this.toPage1()\n            }           \n        }\n  \n     } \n\n     toPage1(){\n\n     }\n}","import React from 'react';\nimport APIView from '../components/APIView';\nimport APINav from '../components/APINav';\nimport RemoteAction from '../service/RemoteAction';\nimport {BaseRouter} from './BaseRouter'\n\nexport class APINavSwitcher extends BaseRouter{\n    constructor(props){\n        super(props)\n        \n        this.state={\n            page1:true,\n            page2:false,\n            apiNavId:-1\n        }\n        this.submit = this.submit.bind(this)         \n        this.toPage1 = this.toPage1.bind(this)\n        this.toPage2 = this.toPage2.bind(this)\n\n        this.pages = [{func:this.toPage1,params:[]}]\n    }\n\n    async submit(evt){\n       evt.preventDefault()\n       const params = this.apiView.form.forms       \n       this.toPage2(params[\"apiNavId\"])\n    }\n\n   toPage1 = ()=>{       \n      this.pages.push({func:this.toPage1,params:[]})\n      this.setState({page1:true,page2:false})\n   } \n\n   toPage2 = (apiNavId)=>{     \n      this.pages.push({func:this.toPage2,params:[apiNavId]})\n      this.setState({page1:false,page2:true,apiNavId:apiNavId})\n   }    \n\n   render(){      \n       if(this.state.page1){    \n        return (<div>\n           <APIView ref={item=>this.apiView=item} \n           action={RemoteAction.ChooseAPINav} \n           router={this}  submit={this.submit}></APIView>\n        </div>)\n       }     \n     else {        \n        return (<div>                  \n           <APINav router={this} apiNavId={this.state.apiNavId}></APINav>\n        </div>)\n     }\n   }\n}","import React from 'react';\nimport APIView from '../components/APIView';\nimport APIMain from '../components/APIMain';\nimport RemoteAction from '../service/RemoteAction';\nimport {APINavSwitcher} from '../router/APINavSwitcher'\nimport {BaseRouter} from './BaseRouter'\n\nexport class APIViewSwitcher extends BaseRouter{\n    constructor(props){\n        super(props)        \n        this.state={\n            page1:true,\n            page2:false,\n            nav:false,\n            current_action:RemoteAction.LIST_ACTIONS \n        }      \n        this.toPage1 = this.toPage1.bind(this)\n        this.toPage2 = this.toPage2.bind(this)\n        this.toNav = this.toNav.bind(this)\n        this.popPage = this.popPage.bind(this)\n\n        this.pages = [{func:this.toPage1,params:[]}]\n    }\n\n   toPage1 = ()=>{\n      this.pages.push({func:this.toPage1,params:[]})\n      this.setState({page1:true,page2:false,nav:false,})\n   } \n\n   toPage2 = (action)=>{\n      this.pages.push({func:this.toPage2,params:[action]})      \n      this.setState({page1:false,page2:true,nav:false,current_action:action})\n   }  \n   \n   toNav = ()=>{\n      this.pages.push({func:this.toNav,params:[]})      \n      this.setState({page1:false,page2:false,nav:true})\n   }\n\n   render(){      \n       if(this.state.page1){\n        return (<div>\n           <APIMain router={this} action={RemoteAction.LIST_ACTIONS}></APIMain>\n        </div>)\n       }     \n     else if(this.state.page2) {\n        return (<div>\n           <APIView  router={this} action={this.state.current_action}></APIView>        \n        </div>)\n     }else if(this.state.nav){        \n      return (<div>\n         <APINavSwitcher router={this} app={this.app}></APINavSwitcher>        \n      </div>)\n     }\n   }\n}","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { APIViewSwitcher } from './router/APIViewSwitcher';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <APIViewSwitcher app={this}></APIViewSwitcher>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './mlsql.scss';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}